apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'

apply from: 'eclipsePaths.gradle'
apply from: 'jettyConfig.gradle'

def defaultEncoding = 'UTF-8'  
compileJava {  
    options.encoding = defaultEncoding  // affects *.java under src/main/java  
}
compileTestJava {  
    options.encoding = defaultEncoding  // affects *.java under src/test/java  
} 

eclipse.classpath {
    downloadSources=true
    file {
        // Classpath entry for Eclipse which changes the order of classpathentries; otherwise no sources for 3rd party jars are shown
        withXml { xml ->
            def node = xml.asNode()
            node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
            node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
        }
        
        whenMerged { classpath ->
            //classpath.entries.removeAll { it.path.endsWith('-sources.jar') }
        }  
    } 
}

//sourceCompatibility = 1.7
version = '1.0'

repositories {
        mavenCentral()
}

dependencies {


    compile 'javax.servlet:javax.servlet-api:3.1.0'
    
    compile 'javax.servlet:jstl:1.2'

    compile 'com.google.guava:guava:14.0.1'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'

    compile files('./lib/class-inspection-1.0.jar')
    compile 'org.javassist:javassist:3.18.0-GA'

    compile 'org.springframework:spring-webmvc:3.2.2.RELEASE'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.12'

    compile 'org.apache.wicket:wicket-core:6.10.0'
    compile 'org.apache.wicket:wicket-spring:6.10.0'

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.11'
}

war {
    version ''
}

/* Change context path (base url). otherwise defaults to name of project */
jettyRunWar.contextPath = ''
